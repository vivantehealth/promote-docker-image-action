name: 'Promote docker image'
description: "Adds current branch tag and specified environment tag to a docker image. Determines source tag by examining PR that introduced the current commit."
inputs:
  tag:
    required: true
    description: New tag to apply to image
    type: string
  add_ref_tag:
    required: false
    description: Whether to apply a docker tag based on the current branch or github tag
    type: boolean
    default: true
  image_name:
    description: "Name of the docker image. Image will be available in the registry at a location such as 'us-docker.pkg.dev/build-artifacts-tools-b6f1/<repo-name>/<image_name>:<git_sha>'."
    type: string
    required: false
    default: image
  base64_workload_identity_provider:
    type: string
    required: true
  base64_gcp_service_account:
    type: string
    required: true
  base64_docker_registry:
    type: string
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up gcloud
      uses: vivantehealth/gcloud-workload-identity-action@v2
      with:
        base64_workload_identity_provider: ${{ inputs.BASE64_WORKLOAD_IDENTITY_PROVIDER }}
        base64_gcp_service_account: ${{ inputs.BASE64_GCP_SERVICE_ACCOUNT }}
    - name: Parse docker registry/repo
      shell: bash
      run: |
        repo=$(echo -n ${{ inputs.BASE64_DOCKER_REGISTRY }} | base64 -d)
        echo "DOCKER_REPO=$repo" >> $GITHUB_ENV
        echo "DOCKER_REGISTRY=$(echo -n ${repo} | sed 's/\/.*//')" >> $GITHUB_ENV
    - name: Configure Docker
      shell: bash
      run: |
        gcloud auth configure-docker ${{ env.DOCKER_REGISTRY }}
    # Get the head commit of the PR that introduced this commit. This is the
    # tag that should have been added to the docker image when it was built
    # and pushed
    - name: Get docker tag
      uses: actions/github-script@v5
      id: fetch-sha
      with:
        script: |
          const result = await github.rest.repos.listPullRequestsAssociatedWithCommit({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha:  context.sha
          });
          const prs = result.data.filter((pr) => pr.merged_at !== null && pr.merged_at !== "")
          if (prs.length !== 1) {
            throw new Error(`Expected exactly one merged PR introducing this commit. Found ${prs.length}`)
          }
          const sha = prs[0].head.sha
          return sha
    - name: Set source image tag
      shell: bash
      run: |
        echo "SOURCE_TAG=$(echo -n ${{ steps.fetch-sha.outputs.result}})" >> $GITHUB_ENV
        # There are extra quotes around the output from the fetch-sha step.
        # This should remove them and set as an env var for subsequent steps
    - name: Pull
      shell: bash
      run: |
        docker pull ${{ env.DOCKER_REPO }}/${{ inputs.image_name }}:${{ env.SOURCE_TAG }}
    - name: Tag and push
      shell: bash
      run: |
        registry=$(echo -n ${{ inputs.BASE64_DOCKER_REGISTRY }} | base64 -d)
        docker tag ${registry}/${{ inputs.image_name }}:${{ env.SOURCE_TAG }} ${registry}/${{ inputs.image_name }}:${{ inputs.tag }}
        docker push ${registry}/${{ inputs.image_name }}:${{ inputs.tag }}
        docker tag ${registry}/${{ inputs.image_name }}:${{ env.SOURCE_TAG }} ${registry}/${{ inputs.image_name }}:${{ github.ref_name }}
        docker push ${registry}/${{ inputs.image_name }}:${{ github.ref_name }}
